apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-model-deployment
  namespace: mlmodel
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-app
  template:
    metadata:
      labels:
        app: ml-app
    spec:
      containers:
      - name: mlflow-model-container
        image: marcy326/mlflow-model:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-model-service
  namespace: mlmodel
spec:
  selector:
    app: ml-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-deploy-sa
  namespace: argo

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: mlmodel
  name: argo-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments/scale"]
  verbs: ["patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: mlmodel
  name: argo-role-binding
subjects:
- kind: ServiceAccount
  name: argo-deploy-sa
  namespace: argo
roleRef:
  kind: Role
  name: argo-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-pod-patch-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-pod-patch-rolebinding
subjects:
- kind: ServiceAccount
  name: argo-deploy-sa
  namespace: argo
roleRef:
  kind: ClusterRole
  name: argo-pod-patch-role
  apiGroup: rbac.authorization.k8s.io
